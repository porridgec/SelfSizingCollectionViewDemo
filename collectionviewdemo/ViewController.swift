//
//  ViewController.swift
//  collectionviewdemo
//
//  Created by Hahn.Chan on 2018/8/1.
//  Copyright Â© 2018 Hahn Chan. All rights reserved.
//

import UIKit

class ViewController: UIViewController {
    
    enum Style: Int {
        case fixedWidth = 0
        case fixedHeight
        
        var cellID: String {
            switch self {
            case .fixedWidth:
                return "SelfSizingCollectionViewCell"
            case .fixedHeight:
                return "FixedHeightSelfSizingCollectionViewCell"
            }
        }
        
        var datasource: [String] {
            switch self {
            case .fixedWidth:
                return ["111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",

                        "333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333",
                        "44444444444444444444444444444444444444444444444444",
                        "55555555555555555555555555555555555",
                        "66666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",

                        "8888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888888",

                        "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"]
            case .fixedHeight:
                return ["11111",
                        "2222",
                        "333",
                        "44",
                        "5",
                        "666666",
                        "7777777",
                        "88888888",
                        "99999",
                        "00",]
            }
        }
    }
    
    @IBOutlet weak var collectionView: UICollectionView!
    @IBOutlet weak var flowLayout: UICollectionViewFlowLayout!
    
    var style = Style.fixedWidth {
        didSet {
            isCollapsed = style.datasource.map({ (_) -> Bool in
                return false
            })
        }
    }
    var isCollapsed = [Bool]()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view, typically from a nib.
        view.backgroundColor = .red
        collectionView.delegate = self
        collectionView.dataSource = self
        collectionView.backgroundColor = .clear
        collectionView.register(UINib.init(nibName: "SelfSizingCollectionViewCell", bundle: nil), forCellWithReuseIdentifier: "SelfSizingCollectionViewCell")
        collectionView.register(UINib.init(nibName: "FixedHeightSelfSizingCollectionViewCell", bundle: nil), forCellWithReuseIdentifier: "FixedHeightSelfSizingCollectionViewCell")
        flowLayout.estimatedItemSize = UICollectionViewFlowLayoutAutomaticSize
        flowLayout.itemSize = UICollectionViewFlowLayoutAutomaticSize
        flowLayout.invalidateLayout()
    }
}

extension ViewController: UICollectionViewDelegate {
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        if style == .fixedWidth {
            let cell = collectionView.cellForItem(at: indexPath) as! SelfSizingCollectionViewCell
            cell.label.numberOfLines = isCollapsed[indexPath.row] ? 0 : 2
            isCollapsed[indexPath.row] = !isCollapsed[indexPath.row]
            collectionView.reloadData()
        }
    }
}

extension ViewController: UICollectionViewDataSource {
    func numberOfSections(in collectionView: UICollectionView) -> Int {
        return 1
    }
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return style.datasource.count
    }
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: style.cellID, for: indexPath)
        switch style {
        case .fixedWidth:
            (cell as! SelfSizingCollectionViewCell).label.numberOfLines = isCollapsed[indexPath.row] ? 2 : 0
            (cell as! SelfSizingCollectionViewCell).label.text = style.datasource[indexPath.row]
        case .fixedHeight:
            (cell as! FixedHeightSelfSizingCollectionViewCell).label.text = style.datasource[indexPath.row]
        }
        return cell
    }
}

